{"ast":null,"code":"var crypto;\n\n// Native crypto from window (Browser)\nif (typeof window !== 'undefined' && window.crypto) {\n  crypto = window.crypto;\n}\n\n// Native (experimental IE 11) crypto from window (Browser)\nif (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n  crypto = window.msCrypto;\n}\n\n/*\n * Cryptographically secure pseudorandom number generator\n * As Math.random() is cryptographically not safe to use\n */\nexport default function cryptoSecureRandomInt() {\n  if (crypto) {\n    // Use getRandomValues method (Browser)\n    if (typeof crypto.getRandomValues === 'function') {\n      try {\n        return crypto.getRandomValues(new Uint32Array(1))[0];\n      } catch (err) {}\n    }\n\n    // Use randomBytes method (NodeJS)\n    if (typeof crypto.randomBytes === 'function') {\n      try {\n        return crypto.randomBytes(4).readInt32LE();\n      } catch (err) {}\n    }\n  }\n  throw new Error('Native crypto module could not be used to get secure random number.');\n}","map":{"version":3,"names":["crypto","window","msCrypto","cryptoSecureRandomInt","getRandomValues","Uint32Array","err","randomBytes","readInt32LE","Error"],"sources":["/workspace/Ecommerce-site/node_modules/amazon-cognito-identity-js/es/utils/cryptoSecureRandomInt.web.js"],"sourcesContent":["var crypto;\n\n// Native crypto from window (Browser)\nif (typeof window !== 'undefined' && window.crypto) {\n  crypto = window.crypto;\n}\n\n// Native (experimental IE 11) crypto from window (Browser)\nif (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n  crypto = window.msCrypto;\n}\n\n/*\n * Cryptographically secure pseudorandom number generator\n * As Math.random() is cryptographically not safe to use\n */\nexport default function cryptoSecureRandomInt() {\n  if (crypto) {\n    // Use getRandomValues method (Browser)\n    if (typeof crypto.getRandomValues === 'function') {\n      try {\n        return crypto.getRandomValues(new Uint32Array(1))[0];\n      } catch (err) {}\n    }\n\n    // Use randomBytes method (NodeJS)\n    if (typeof crypto.randomBytes === 'function') {\n      try {\n        return crypto.randomBytes(4).readInt32LE();\n      } catch (err) {}\n    }\n  }\n  throw new Error('Native crypto module could not be used to get secure random number.');\n}"],"mappings":"AAAA,IAAIA,MAAM;;AAEV;AACA,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACD,MAAM,EAAE;EAClDA,MAAM,GAAGC,MAAM,CAACD,MAAM;AACxB;;AAEA;AACA,IAAI,CAACA,MAAM,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,QAAQ,EAAE;EAC/DF,MAAM,GAAGC,MAAM,CAACC,QAAQ;AAC1B;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAASC,qBAAqBA,CAAA,EAAG;EAC9C,IAAIH,MAAM,EAAE;IACV;IACA,IAAI,OAAOA,MAAM,CAACI,eAAe,KAAK,UAAU,EAAE;MAChD,IAAI;QACF,OAAOJ,MAAM,CAACI,eAAe,CAAC,IAAIC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtD,CAAC,CAAC,OAAOC,GAAG,EAAE,CAAC;IACjB;;IAEA;IACA,IAAI,OAAON,MAAM,CAACO,WAAW,KAAK,UAAU,EAAE;MAC5C,IAAI;QACF,OAAOP,MAAM,CAACO,WAAW,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAC5C,CAAC,CAAC,OAAOF,GAAG,EAAE,CAAC;IACjB;EACF;EACA,MAAM,IAAIG,KAAK,CAAC,qEAAqE,CAAC;AACxF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}