{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RawSha256 = void 0;\nvar constants_1 = require(\"./constants\");\n/**\n * @internal\n */\nvar RawSha256 = /** @class */function () {\n  function RawSha256() {\n    this.state = Int32Array.from(constants_1.INIT);\n    this.temp = new Int32Array(64);\n    this.buffer = new Uint8Array(64);\n    this.bufferLength = 0;\n    this.bytesHashed = 0;\n    /**\n     * @internal\n     */\n    this.finished = false;\n  }\n  RawSha256.prototype.update = function (data) {\n    if (this.finished) {\n      throw new Error(\"Attempted to update an already finished hash.\");\n    }\n    var position = 0;\n    var byteLength = data.byteLength;\n    this.bytesHashed += byteLength;\n    if (this.bytesHashed * 8 > constants_1.MAX_HASHABLE_LENGTH) {\n      throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n    }\n    while (byteLength > 0) {\n      this.buffer[this.bufferLength++] = data[position++];\n      byteLength--;\n      if (this.bufferLength === constants_1.BLOCK_SIZE) {\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n    }\n  };\n  RawSha256.prototype.digest = function () {\n    if (!this.finished) {\n      var bitsHashed = this.bytesHashed * 8;\n      var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n      var undecoratedLength = this.bufferLength;\n      bufferView.setUint8(this.bufferLength++, 0x80);\n      // Ensure the final block has enough room for the hashed length\n      if (undecoratedLength % constants_1.BLOCK_SIZE >= constants_1.BLOCK_SIZE - 8) {\n        for (var i = this.bufferLength; i < constants_1.BLOCK_SIZE; i++) {\n          bufferView.setUint8(i, 0);\n        }\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n      for (var i = this.bufferLength; i < constants_1.BLOCK_SIZE - 8; i++) {\n        bufferView.setUint8(i, 0);\n      }\n      bufferView.setUint32(constants_1.BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);\n      bufferView.setUint32(constants_1.BLOCK_SIZE - 4, bitsHashed);\n      this.hashBuffer();\n      this.finished = true;\n    }\n    // The value in state is little-endian rather than big-endian, so flip\n    // each word into a new Uint8Array\n    var out = new Uint8Array(constants_1.DIGEST_LENGTH);\n    for (var i = 0; i < 8; i++) {\n      out[i * 4] = this.state[i] >>> 24 & 0xff;\n      out[i * 4 + 1] = this.state[i] >>> 16 & 0xff;\n      out[i * 4 + 2] = this.state[i] >>> 8 & 0xff;\n      out[i * 4 + 3] = this.state[i] >>> 0 & 0xff;\n    }\n    return out;\n  };\n  RawSha256.prototype.hashBuffer = function () {\n    var _a = this,\n      buffer = _a.buffer,\n      state = _a.state;\n    var state0 = state[0],\n      state1 = state[1],\n      state2 = state[2],\n      state3 = state[3],\n      state4 = state[4],\n      state5 = state[5],\n      state6 = state[6],\n      state7 = state[7];\n    for (var i = 0; i < constants_1.BLOCK_SIZE; i++) {\n      if (i < 16) {\n        this.temp[i] = (buffer[i * 4] & 0xff) << 24 | (buffer[i * 4 + 1] & 0xff) << 16 | (buffer[i * 4 + 2] & 0xff) << 8 | buffer[i * 4 + 3] & 0xff;\n      } else {\n        var u = this.temp[i - 2];\n        var t1_1 = (u >>> 17 | u << 15) ^ (u >>> 19 | u << 13) ^ u >>> 10;\n        u = this.temp[i - 15];\n        var t2_1 = (u >>> 7 | u << 25) ^ (u >>> 18 | u << 14) ^ u >>> 3;\n        this.temp[i] = (t1_1 + this.temp[i - 7] | 0) + (t2_1 + this.temp[i - 16] | 0);\n      }\n      var t1 = (((state4 >>> 6 | state4 << 26) ^ (state4 >>> 11 | state4 << 21) ^ (state4 >>> 25 | state4 << 7)) + (state4 & state5 ^ ~state4 & state6) | 0) + (state7 + (constants_1.KEY[i] + this.temp[i] | 0) | 0) | 0;\n      var t2 = ((state0 >>> 2 | state0 << 30) ^ (state0 >>> 13 | state0 << 19) ^ (state0 >>> 22 | state0 << 10)) + (state0 & state1 ^ state0 & state2 ^ state1 & state2) | 0;\n      state7 = state6;\n      state6 = state5;\n      state5 = state4;\n      state4 = state3 + t1 | 0;\n      state3 = state2;\n      state2 = state1;\n      state1 = state0;\n      state0 = t1 + t2 | 0;\n    }\n    state[0] += state0;\n    state[1] += state1;\n    state[2] += state2;\n    state[3] += state3;\n    state[4] += state4;\n    state[5] += state5;\n    state[6] += state6;\n    state[7] += state7;\n  };\n  return RawSha256;\n}();\nexports.RawSha256 = RawSha256;","map":{"version":3,"names":["constants_1","require","RawSha256","state","Int32Array","from","INIT","temp","buffer","Uint8Array","bufferLength","bytesHashed","finished","prototype","update","data","Error","position","byteLength","MAX_HASHABLE_LENGTH","BLOCK_SIZE","hashBuffer","digest","bitsHashed","bufferView","DataView","byteOffset","undecoratedLength","setUint8","i","setUint32","Math","floor","out","DIGEST_LENGTH","_a","state0","state1","state2","state3","state4","state5","state6","state7","u","t1_1","t2_1","t1","KEY","t2","exports"],"sources":["/workspaces/Ecommerce-site/node_modules/@aws-crypto/sha256-js/src/RawSha256.ts"],"sourcesContent":["import {\n  BLOCK_SIZE,\n  DIGEST_LENGTH,\n  INIT,\n  KEY,\n  MAX_HASHABLE_LENGTH\n} from \"./constants\";\n\n/**\n * @internal\n */\nexport class RawSha256 {\n  private state: Int32Array = Int32Array.from(INIT);\n  private temp: Int32Array = new Int32Array(64);\n  private buffer: Uint8Array = new Uint8Array(64);\n  private bufferLength: number = 0;\n  private bytesHashed: number = 0;\n\n  /**\n   * @internal\n   */\n  finished: boolean = false;\n\n  update(data: Uint8Array): void {\n    if (this.finished) {\n      throw new Error(\"Attempted to update an already finished hash.\");\n    }\n\n    let position = 0;\n    let { byteLength } = data;\n    this.bytesHashed += byteLength;\n\n    if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n      throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n    }\n\n    while (byteLength > 0) {\n      this.buffer[this.bufferLength++] = data[position++];\n      byteLength--;\n\n      if (this.bufferLength === BLOCK_SIZE) {\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n    }\n  }\n\n  digest(): Uint8Array {\n    if (!this.finished) {\n      const bitsHashed = this.bytesHashed * 8;\n      const bufferView = new DataView(\n        this.buffer.buffer,\n        this.buffer.byteOffset,\n        this.buffer.byteLength\n      );\n\n      const undecoratedLength = this.bufferLength;\n      bufferView.setUint8(this.bufferLength++, 0x80);\n\n      // Ensure the final block has enough room for the hashed length\n      if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n        for (let i = this.bufferLength; i < BLOCK_SIZE; i++) {\n          bufferView.setUint8(i, 0);\n        }\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n\n      for (let i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n        bufferView.setUint8(i, 0);\n      }\n      bufferView.setUint32(\n        BLOCK_SIZE - 8,\n        Math.floor(bitsHashed / 0x100000000),\n        true\n      );\n      bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n\n      this.hashBuffer();\n\n      this.finished = true;\n    }\n\n    // The value in state is little-endian rather than big-endian, so flip\n    // each word into a new Uint8Array\n    const out = new Uint8Array(DIGEST_LENGTH);\n    for (let i = 0; i < 8; i++) {\n      out[i * 4] = (this.state[i] >>> 24) & 0xff;\n      out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n      out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n      out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n    }\n\n    return out;\n  }\n\n  private hashBuffer(): void {\n    const { buffer, state } = this;\n\n    let state0 = state[0],\n      state1 = state[1],\n      state2 = state[2],\n      state3 = state[3],\n      state4 = state[4],\n      state5 = state[5],\n      state6 = state[6],\n      state7 = state[7];\n\n    for (let i = 0; i < BLOCK_SIZE; i++) {\n      if (i < 16) {\n        this.temp[i] =\n          ((buffer[i * 4] & 0xff) << 24) |\n          ((buffer[i * 4 + 1] & 0xff) << 16) |\n          ((buffer[i * 4 + 2] & 0xff) << 8) |\n          (buffer[i * 4 + 3] & 0xff);\n      } else {\n        let u = this.temp[i - 2];\n        const t1 =\n          ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n\n        u = this.temp[i - 15];\n        const t2 =\n          ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n\n        this.temp[i] =\n          ((t1 + this.temp[i - 7]) | 0) + ((t2 + this.temp[i - 16]) | 0);\n      }\n\n      const t1 =\n        ((((((state4 >>> 6) | (state4 << 26)) ^\n          ((state4 >>> 11) | (state4 << 21)) ^\n          ((state4 >>> 25) | (state4 << 7))) +\n          ((state4 & state5) ^ (~state4 & state6))) |\n          0) +\n          ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\n        0;\n\n      const t2 =\n        ((((state0 >>> 2) | (state0 << 30)) ^\n          ((state0 >>> 13) | (state0 << 19)) ^\n          ((state0 >>> 22) | (state0 << 10))) +\n          ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n        0;\n\n      state7 = state6;\n      state6 = state5;\n      state5 = state4;\n      state4 = (state3 + t1) | 0;\n      state3 = state2;\n      state2 = state1;\n      state1 = state0;\n      state0 = (t1 + t2) | 0;\n    }\n\n    state[0] += state0;\n    state[1] += state1;\n    state[2] += state2;\n    state[3] += state3;\n    state[4] += state4;\n    state[5] += state5;\n    state[6] += state6;\n    state[7] += state7;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}