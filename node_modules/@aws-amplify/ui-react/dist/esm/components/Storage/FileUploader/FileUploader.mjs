import{__rest as e}from"tslib";import i,{useState as t,useEffect as r,useCallback as s,useMemo as o}from"react";import{Storage as m}from"@aws-amplify/storage";import{translate as a,uploadFile as l,isValidExtension as p}from"@aws-amplify/ui";import{Logger as n}from"aws-amplify";import"../../../primitives/Alert/Alert.mjs";import"../../../primitives/Autocomplete/Autocomplete.mjs";import"../../../primitives/Badge/Badge.mjs";import"../../../primitives/Breadcrumbs/Breadcrumbs.mjs";import{Button as c}from"../../../primitives/Button/Button.mjs";import"../../../primitives/ButtonGroup/ButtonGroup.mjs";import"../../../primitives/Card/Card.mjs";import"../../../primitives/CheckboxField/CheckboxField.mjs";import"../../../primitives/Collection/Collection.mjs";import"../../../primitives/Divider/Divider.mjs";import"../../../primitives/DropZone/DropZone.mjs";import"../../../primitives/Expander/Expander.mjs";import"../../../primitives/Expander/ExpanderItem.mjs";import"../../../primitives/FieldGroupIcon/FieldGroupIcon.mjs";import"../../../primitives/FieldGroupIcon/FieldGroupIconButton.mjs";import"../../../primitives/Fieldset/Fieldset.mjs";import"../../../primitives/Fieldset/useFieldset.mjs";import"../../../primitives/Flex/Flex.mjs";import"../../../primitives/Grid/Grid.mjs";import"../../../primitives/Heading/Heading.mjs";import"../../../primitives/HighlightMatch/HighlightMatch.mjs";import"../../../primitives/Icon/Icon.mjs";import"../../../primitives/Icon/context/IconsContext.mjs";import"classnames";import{ComponentClassNames as d}from"../../../primitives/shared/constants.mjs";import"../../../primitives/View/View.mjs";import"../../../primitives/Image/Image.mjs";import"../../../primitives/Input/Input.mjs";import"../../../primitives/Label/Label.mjs";import"../../../primitives/Link/Link.mjs";import"../../../primitives/Loader/Loader.mjs";import"../../../primitives/Menu/Menu.mjs";import"../../../primitives/Menu/MenuButton.mjs";import"../../../primitives/Menu/MenuItem.mjs";import"../../../primitives/Message/Message.mjs";import"../../../primitives/Pagination/Pagination.mjs";import"../../../primitives/PasswordField/PasswordField.mjs";import"../../../primitives/PhoneNumberField/PhoneNumberField.mjs";import"../../../primitives/Placeholder/Placeholder.mjs";import"../../../primitives/Radio/Radio.mjs";import"../../../primitives/RadioGroupField/RadioGroupField.mjs";import"../../../primitives/Rating/Rating.mjs";import"../../../primitives/ScrollView/ScrollView.mjs";import"../../../primitives/SearchField/SearchField.mjs";import"../../../primitives/SelectField/SelectField.mjs";import"../../../primitives/SliderField/SliderField.mjs";import"../../../primitives/StepperField/StepperField.mjs";import"../../../primitives/SwitchField/SwitchField.mjs";import"../../../primitives/Table/Table.mjs";import"../../../primitives/Table/TableBody.mjs";import"../../../primitives/Table/TableCell.mjs";import"../../../primitives/Table/TableFoot.mjs";import"../../../primitives/Table/TableHead.mjs";import"../../../primitives/Table/TableRow.mjs";import"../../../primitives/Tabs/Tabs.mjs";import"../../../primitives/Text/Text.mjs";import"../../../primitives/TextAreaField/TextAreaField.mjs";import"../../../primitives/TextField/TextField.mjs";import"../../../primitives/ToggleButton/ToggleButton.mjs";import"../../../primitives/ToggleButtonGroup/ToggleButtonGroup.mjs";import{VisuallyHidden as u}from"../../../primitives/VisuallyHidden/VisuallyHidden.mjs";import v from"./hooks/useFileUploader/useFileUploader.mjs";import{UploadPreviewer as g}from"./UploadPreviewer/UploadPreviewer.mjs";import{UploadDropZone as j}from"./UploadDropZone/UploadDropZone.mjs";import{UploadTracker as f}from"./UploadTracker/UploadTracker.mjs";import{FileState as F}from"./types.mjs";import{useDeprecationWarning as b}from"../../../hooks/useDeprecationWarning.mjs";const h=e=>"function"==typeof(null==e?void 0:e.resume),S=new n("AmplifyUI:Storage");function T(n){var{acceptedFileTypes:T,shouldAutoProceed:w=!1,isPreviewerVisible:I,maxFileCount:E,maxSize:x,hasMultipleFiles:C=!0,onError:P,onSuccess:O,showImages:k=!0,accessLevel:M,variation:R="drop",isResumable:y=!1}=n,D=e(n,["acceptedFileTypes","shouldAutoProceed","isPreviewerVisible","maxFileCount","maxSize","hasMultipleFiles","onError","onSuccess","showImages","accessLevel","variation","isResumable"]);b({shouldWarn:!0,message:"FileUploader has exited Dev Preview and was renamed to StorageManager with some API changes. Please migrate to the StorageManager component, as the FileUploader component is no longer supported and will be removed in a future major release. https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager"}),T&&M||S.warn("FileUploader requires accessLevel and acceptedFileTypes props");const[B,U]=t(!1),[G,A]=t(!1),L=v({maxSize:x,acceptedFileTypes:T,hasMultipleFiles:C,isLoading:B,setAutoLoad:A}),{addTargetFiles:N,fileStatuses:Z,inDropZone:V,setFileStatuses:H,setShowPreviewer:z,showPreviewer:W}=L,q=e(L,["addTargetFiles","fileStatuses","inDropZone","setFileStatuses","setShowPreviewer","showPreviewer"]),J=Math.floor(Z.reduce(((e,i)=>{var t;return e+(null!==(t=null==i?void 0:i.percentage)&&void 0!==t?t:0)}),0)/Z.length),K=0!==Z.length&&Z.every((e=>100===(null==e?void 0:e.percentage))),Q=Z.filter((e=>100!==e.percentage)).length>E;r((()=>{100===Math.floor(J)&&U(!1)}),[J]),r((()=>{z(I)}),[z,I]);const X=s((e=>i=>{H((t=>{const r=Object.assign({},t[e]),s=0!==i.total?Math.floor(i.loaded/i.total*100):100,o=100!==s?F.LOADING:F.SUCCESS,m=Object.assign(Object.assign({},r),{percentage:s,fileState:o});return t[e]=m,[...t]}))}),[H]),Y=s((e=>i=>{H((t=>{const r=Object.assign({},t[e]),s=Object.assign(Object.assign({},r),{fileState:"error",fileErrors:a(i.toString())});return t[e]=s,[...t]})),U(!1),"function"==typeof P&&P(i)}),[P,H]),$=s((e=>function(){const i=Z[e];h(i.uploadTask)&&i.uploadTask.pause();const t=[...Z];t[e]=Object.assign(Object.assign({},i),{fileState:F.PAUSED}),H(t)}),[Z,H]),_=s((e=>function(){const i=Z[e];h(i.uploadTask)&&i.uploadTask.resume();const t=[...Z];t[e]=Object.assign(Object.assign({},i),{fileState:F.RESUME}),H(t)}),[Z,H]),ee=s((()=>{U(!0);const e=[];Z.forEach(((i,t)=>{if((null==i?void 0:i.fileState)===F.SUCCESS)return;const r=l(Object.assign({file:i.file,fileName:i.name,level:M,isResumable:y,progressCallback:X(t),errorCallback:Y(t),completeCallback:O},D));h(r)&&y&&e.push(r)})),H((i=>i.map(((i,t)=>{var r;return Object.assign(Object.assign({},i),{uploadTask:null==e?void 0:e[t],fileState:i.fileState===F.INIT?F.LOADING:i.fileState,percentage:null!==(r=i.percentage)&&void 0!==r?r:0})}))))}),[Z,H,M,y,X,Y,O,D]),ie=s((e=>{if(!e.target.files||0===e.target.files.length)return;const{files:i}=e.target;N([...i])>0&&(z(!0),A(!0))}),[N,z]),te=s((()=>{z(!1),H([])}),[H,z]),re=s((e=>()=>{const{fileState:i,uploadTask:t}=Z[e];"loading"===i&&h(t)&&(m.cancel(t),U(!1));const r=Z.filter(((i,t)=>t!==e));H(r)}),[Z,H]),se=s((e=>i=>{if(0===i.trim().length)return;const t=[...Z],r=Z[e],s=p(i,r.file.name);t[e]=Object.assign(Object.assign({},r),{name:i,fileState:s?F.INIT:F.ERROR,fileErrors:s?void 0:a("Extension not allowed")}),H(t)}),[Z,H]),oe=s(((e,i)=>{H((t=>{const r=[...t],s=r[e],o=p(s.name,s.file.name)?F.INIT:F.ERROR,m=i===F.INIT?o:i;return r[e]=Object.assign(Object.assign({},s),{fileState:m}),r}))}),[H]),me=s((e=>()=>{oe(e,F.INIT)}),[oe]),ae=s((e=>i=>{oe(e,F.EDITING)}),[oe]);r((()=>{w&&G&&!Q&&(ee(),A(!1))}),[w,ee,G,Q]);const le=i.useRef(null),pe=null==T?void 0:T.join(),ne=o((()=>i.createElement(i.Fragment,null,i.createElement(c,{className:d.FileUploaderDropZoneButton,isDisabled:B,onClick:()=>{var e;null===(e=null==le?void 0:le.current)||void 0===e||e.click(),le.current.value=""},size:"small"},a("Browse files")),i.createElement(u,null,i.createElement("input",{type:"file",tabIndex:-1,ref:le,onChange:ie,multiple:C,accept:pe})))),[B,ie,C,pe]);return W?i.createElement(g,{dropZone:i.createElement(j,Object.assign({},q,{inDropZone:V}),ne),fileStatuses:Z,isLoading:B,isSuccessful:K,hasMaxFilesError:Q,maxFileCount:E,onClear:te,onFileClick:ee,aggregatePercentage:J},null==Z?void 0:Z.map(((e,t)=>{var r;return i.createElement(f,{errorMessage:null==e?void 0:e.fileErrors,file:e.file,fileState:null==e?void 0:e.fileState,hasImage:null===(r=e.file)||void 0===r?void 0:r.type.startsWith("image/"),showImage:k,key:t,name:e.name,onCancel:re(t),onCancelEdit:me(t),onPause:$(t),onResume:_(t),onSaveEdit:se(t),onStartEdit:ae(t),percentage:e.percentage,isResumable:y})}))):"button"===R?ne:i.createElement(j,Object.assign({},q,{inDropZone:V}),ne)}export{T as FileUploader};
