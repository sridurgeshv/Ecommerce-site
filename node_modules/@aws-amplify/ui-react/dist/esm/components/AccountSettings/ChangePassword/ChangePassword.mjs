import i from"react";import e from"lodash/isEqual.js";import{Logger as r}from"aws-amplify";import{getDefaultPasswordValidators as s,runFieldValidators as t,getDefaultConfirmPasswordValidators as m,translate as o,changePassword as a}from"@aws-amplify/ui";import{useAuth as p}from"../../../hooks/useAuth.mjs";import"@aws-amplify/datastore";import"@aws-amplify/ui-react-core";import"@aws-amplify/storage";import"../../ThemeProvider/AmplifyContext.mjs";import"../../../primitives/shared/constants.mjs";import"tslib";import"../../../helpers/constants.mjs";import"../../../primitives/Alert/AlertIcon.mjs";import"classnames";import{View as l}from"../../../primitives/View/View.mjs";import"../../../primitives/Icon/context/IconsContext.mjs";import"../../../primitives/Field/FieldClearButton.mjs";import"../../../primitives/Field/FieldDescription.mjs";import"../../../primitives/Field/FieldErrorMessage.mjs";import"../../../primitives/Field/Field.mjs";import"../../../primitives/Alert/Alert.mjs";import"../../../primitives/Autocomplete/Autocomplete.mjs";import"../../../primitives/Badge/Badge.mjs";import"../../../primitives/Breadcrumbs/Breadcrumbs.mjs";import"../../../primitives/Button/Button.mjs";import"../../../primitives/ButtonGroup/ButtonGroup.mjs";import"../../../primitives/Card/Card.mjs";import"../../../primitives/CheckboxField/CheckboxField.mjs";import"../../../primitives/Collection/Collection.mjs";import"../../../primitives/Divider/Divider.mjs";import"../../../primitives/DropZone/DropZone.mjs";import"../../../primitives/Expander/Expander.mjs";import"../../../primitives/Expander/ExpanderItem.mjs";import"../../../primitives/FieldGroupIcon/FieldGroupIcon.mjs";import"../../../primitives/FieldGroupIcon/FieldGroupIconButton.mjs";import"../../../primitives/Fieldset/Fieldset.mjs";import"../../../primitives/Fieldset/useFieldset.mjs";import{Flex as n}from"../../../primitives/Flex/Flex.mjs";import"../../../primitives/Grid/Grid.mjs";import"../../../primitives/Heading/Heading.mjs";import"../../../primitives/HighlightMatch/HighlightMatch.mjs";import"../../../primitives/Icon/Icon.mjs";import"../../../primitives/Image/Image.mjs";import"../../../primitives/Input/Input.mjs";import"../../../primitives/Label/Label.mjs";import"../../../primitives/Link/Link.mjs";import"../../../primitives/Loader/Loader.mjs";import"../../../primitives/Menu/Menu.mjs";import"../../../primitives/Menu/MenuButton.mjs";import"../../../primitives/Menu/MenuItem.mjs";import"../../../primitives/Message/Message.mjs";import"../../../primitives/Pagination/Pagination.mjs";import"../../../primitives/PasswordField/PasswordField.mjs";import"../../../primitives/PhoneNumberField/PhoneNumberField.mjs";import"../../../primitives/Placeholder/Placeholder.mjs";import"../../../primitives/Radio/Radio.mjs";import"../../../primitives/RadioGroupField/RadioGroupField.mjs";import"../../../primitives/Rating/Rating.mjs";import"../../../primitives/ScrollView/ScrollView.mjs";import"../../../primitives/SearchField/SearchField.mjs";import"../../../primitives/SelectField/SelectField.mjs";import"../../../primitives/SliderField/SliderField.mjs";import"../../../primitives/StepperField/StepperField.mjs";import"../../../primitives/SwitchField/SwitchField.mjs";import"../../../primitives/Table/Table.mjs";import"../../../primitives/Table/TableBody.mjs";import"../../../primitives/Table/TableCell.mjs";import"../../../primitives/Table/TableFoot.mjs";import"../../../primitives/Table/TableHead.mjs";import"../../../primitives/Table/TableRow.mjs";import"../../../primitives/Tabs/Tabs.mjs";import"../../../primitives/Text/Text.mjs";import"../../../primitives/TextAreaField/TextAreaField.mjs";import"../../../primitives/TextField/TextField.mjs";import"../../../primitives/ToggleButton/ToggleButton.mjs";import"../../../primitives/ToggleButtonGroup/ToggleButtonGroup.mjs";import"../../../primitives/VisuallyHidden/VisuallyHidden.mjs";import{ComponentClassName as d}from"../constants.mjs";import u from"./defaults.mjs";const c=new r("ChangePassword");function v({onSuccess:r,onError:v,validators:j,components:w}){const[F,g]=i.useState(null),[P,f]=i.useState({}),[b,h]=i.useState({}),T=i.useRef([]),{user:C,isLoading:B}=p(),S=((i,e)=>{var r,s;const{currentPassword:t,newPassword:m,confirmPassword:o}=i;return!(t&&m&&o)||((null===(r=e.newPassword)||void 0===r?void 0:r.length)>0||(null===(s=e.confirmPassword)||void 0===s?void 0:s.length)>0)})(P,b),E=i.useMemo((()=>null!=j?j:s()),[j]),x=i.useCallback((({formValues:i,eventType:e})=>{const{newPassword:r}=i,s=T.current.includes("newPassword");return t({value:r,validators:E,eventType:e,hasBlurred:s})}),[E]),y=i.useCallback((({formValues:i,eventType:e})=>{const{newPassword:r,confirmPassword:s}=i,o=T.current.includes("confirmPassword"),a=m(r);return t({value:s,validators:a,eventType:e,hasBlurred:o})}),[]),M=i.useCallback((i=>{const r={newPassword:x(i),confirmPassword:y(i)};e(b,r)||h(r)}),[y,x,b]),I=o("Current Password"),G=o("New Password"),V=o("Confirm Password"),R=o("Update password"),{CurrentPasswordField:A,NewPasswordField:D,ConfirmPasswordField:k,SubmitButton:H,ErrorMessage:L}=i.useMemo((()=>Object.assign(Object.assign({},u),null!=w?w:{})),[w]),N=i=>{i.preventDefault();const{name:e,value:r}=i.target,s=Object.assign(Object.assign({},P),{[e]:r});M({formValues:s,eventType:"change"}),f(s)},q=i=>{i.preventDefault();const{name:e}=i.target;if(!T.current.includes(e)){const i=[...T.current,e];T.current=i,M({formValues:P,eventType:"blur"})}};return B?null:C?i.createElement(l,{as:"form",className:d.ChangePassword,onSubmit:i=>{if(i.preventDefault(),!C)return;const{currentPassword:e,newPassword:s}=P;F&&g(null),a({user:C,currentPassword:e,newPassword:s}).then((()=>{null==r||r()})).catch((i=>{const e=i;e.message&&g(e.message),null==v||v(e)}))}},i.createElement(n,{direction:"column"},i.createElement(A,{autoComplete:"current-password",isRequired:!0,label:I,name:"currentPassword",onBlur:q,onChange:N}),i.createElement(D,{autoComplete:"new-password",fieldValidationErrors:null==b?void 0:b.newPassword,isRequired:!0,label:G,name:"newPassword",onBlur:q,onChange:N}),i.createElement(k,{autoComplete:"new-password",fieldValidationErrors:null==b?void 0:b.confirmPassword,isRequired:!0,label:V,name:"confirmPassword",onBlur:q,onChange:N}),i.createElement(H,{isDisabled:S,type:"submit"},R),F?i.createElement(L,null,F):null)):(c.warn("<ChangePassword /> requires user to be authenticated."),null)}v.CurrentPasswordField=u.CurrentPasswordField,v.NewPasswordField=u.NewPasswordField,v.ConfirmPasswordField=u.ConfirmPasswordField,v.SubmitButton=u.SubmitButton,v.ErrorMessage=u.ErrorMessage;export{v as default};
