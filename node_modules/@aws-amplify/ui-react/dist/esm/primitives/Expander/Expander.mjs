import{__rest as e}from"tslib";import*as a from"react";import*as t from"@radix-ui/react-accordion";import l from"classnames";import{sanitizeNamespaceImport as s}from"@aws-amplify/ui";import{useDeprecationWarning as r}from"../../hooks/useDeprecationWarning.mjs";import{ComponentClassNames as o}from"../shared/constants.mjs";import{splitPrimitiveProps as n}from"../utils/splitPrimitiveProps.mjs";const{Root:i}=s(t),m=a.forwardRef(((t,s)=>{var{children:m,className:p,defaultValue:u,isCollapsible:d,onChange:c,onValueChange:f,testId:h,type:g="single",value:C}=t,V=e(t,["children","className","defaultValue","isCollapsible","onChange","onValueChange","testId","type","value"]);const{rest:b}=n(V),x=null!=f?f:c;r({shouldWarn:!!c,message:"Expander `onChange` prop will be deprecated in the next major release of @aws-amplify/ui-react. Please replace usage with `onValueChange`."});return"multiple"===g?a.createElement(i,Object.assign({className:l(o.Expander,p),"data-testid":h,defaultValue:u,onValueChange:x,ref:s,type:g,value:C},b),m):a.createElement(i,Object.assign({className:l(o.Expander,p),collapsible:d,"data-testid":h,defaultValue:u,onValueChange:x,ref:s,type:g,value:C},b),m)}));m.displayName="Expander";export{m as Expander};
