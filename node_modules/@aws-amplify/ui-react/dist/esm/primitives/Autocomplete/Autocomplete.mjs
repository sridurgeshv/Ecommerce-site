import{__rest as e}from"tslib";import o from"classnames";import*as t from"react";import{isFunction as n}from"@aws-amplify/ui";import{AutocompleteOption as a}from"./AutocompleteOption.mjs";import{AutocompleteMenu as i}from"./AutocompleteMenu.mjs";import{useAutocomplete as l}from"./useAutocomplete.mjs";import{HighlightMatch as r}from"../HighlightMatch/HighlightMatch.mjs";import{SearchField as s}from"../SearchField/SearchField.mjs";import{View as m}from"../View/View.mjs";import{ComponentClassNames as c}from"../shared/constants.mjs";const u=(u,p)=>{var{className:d,defaultValue:h,value:f,isLoading:C=!1,menuSlots:g={},options:O,optionFilter:b,onBlur:v,onChange:I,onClear:S,onClick:j,onSelect:w,onSubmit:M,renderOption:k,testId:A}=u,B=e(u,["className","defaultValue","value","isLoading","menuSlots","options","optionFilter","onBlur","onChange","onClear","onClick","onSelect","onSubmit","renderOption","testId"]);const{activeOptionId:V,autocompleteId:x,composedValue:y,filteredOptions:F,handleOnBlur:E,handleOnClear:D,handleOnClick:N,handleOnChange:L,handleOnKeyDown:H,isControlled:K,isCustomFiltering:$,isMenuOpen:q,listboxId:R,menuId:z,optionBaseId:G,setActiveOption:J,setIsMenuOpen:P,setInternalValue:Q}=l({defaultValue:h,value:f,options:O,optionFilter:b,onBlur:v,onChange:I,onClear:S,onClick:j,onSelect:w,onSubmit:M}),T={role:"combobox","aria-activedescendant":V,"aria-autocomplete":"list","aria-controls":q?z:void 0,"aria-expanded":q,"aria-haspopup":"listbox","aria-owns":q?z:void 0},U=F.map(((o,i)=>{const{id:l,label:s}=o,m=e(o,["id","label"]),c=null!=l?l:`${G}-option-${i}`,u=c===V;return t.createElement(a,Object.assign({isActive:u,id:c,key:c,onClick:()=>{P(!1),J(null),K||Q(s),n(w)&&w(o)},onMouseDown:e=>{e.preventDefault()},onMouseMove:()=>{J(o)}},m),n(k)?k(o,y):$?s:t.createElement(r,{query:y},s))}));return t.createElement(m,{className:o(c.Autocomplete,d),id:x,testId:A},t.createElement(s,Object.assign({hasSearchButton:!1,hasSearchIcon:!0,onBlur:E,onChange:L,onClear:D,onClick:N,onKeyDown:H,ref:p,value:y},T,B)),q?t.createElement(i,Object.assign({id:z,isLoading:C,listboxId:R},g),U):null)},p=t.forwardRef(u);p.displayName="Autocomplete";export{p as Autocomplete,u as AutocompletePrimitive};
