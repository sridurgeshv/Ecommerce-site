import{__rest as e}from"tslib";import*as t from"react";import s from"classnames";import{classNameModifierByFlag as a,isFunction as o}from"@aws-amplify/ui";import{Flex as c}from"../Flex/Flex.mjs";import"../Icon/Icon.mjs";import"../Icon/context/IconsContext.mjs";import{useIcons as n}from"../Icon/context/useIcons.mjs";import{ComponentClassNames as i}from"../shared/constants.mjs";import{View as d}from"../View/View.mjs";import{IconCheck as r}from"../Icon/icons/IconCheck.mjs";import{IconIndeterminate as l}from"../Icon/icons/IconIndeterminate.mjs";import{Input as m}from"../Input/Input.mjs";import{Text as b}from"../Text/Text.mjs";import{VisuallyHidden as u}from"../VisuallyHidden/VisuallyHidden.mjs";import{getTestId as h}from"../utils/getTestId.mjs";import{useStableId as p}from"../utils/useStableId.mjs";import{splitPrimitiveProps as k}from"../utils/splitPrimitiveProps.mjs";import{useFieldset as f}from"../Fieldset/useFieldset.mjs";const I=t.forwardRef(((I,x)=>{var{checked:C,className:j,defaultChecked:E,hasError:y,isDisabled:g,isIndeterminate:N,label:B,labelHidden:F,labelPosition:S,onBlur:v,onFocus:H,onChange:O,testId:P,inputStyles:V}=I,w=e(I,["checked","className","defaultChecked","hasError","isDisabled","isIndeterminate","label","labelHidden","labelPosition","onBlur","onFocus","onChange","testId","inputStyles"]);const{styleProps:D,rest:T}=k(w),[L,q]=t.useState(!1),R=n("checkbox"),{isFieldsetDisabled:$}=f(),z=$||g,A=void 0!==C,[G,J]=t.useState((()=>A?C:E)),K=A?C:G,M=p();t.useEffect((()=>{const e=document.querySelector(`[data-id="${M}"]`);e&&"boolean"==typeof N&&(e.indeterminate=N)}),[M,N]);const Q=h(P,i.CheckboxButton),U=h(P,i.CheckboxIcon),W=h(P,i.CheckboxLabel),X=s(i.CheckboxButton,a(i.CheckboxButton,"disabled",z),a(i.CheckboxButton,"error",y),a(i.CheckboxButton,"focused",L)),Y=s(i.CheckboxIcon,a(i.CheckboxIcon,"checked",K),a(i.CheckboxIcon,"disabled",z),a(i.CheckboxIcon,"indeterminate",N)),Z={className:s(Y),"data-checked":G,"data-disabled":z,"data-testid":U},_=(null==R?void 0:R.checked)?t.createElement(d,{as:"span",className:s(Y)},R.checked):t.createElement(r,Object.assign({},Z)),ee=(null==R?void 0:R.indeterminate)?t.createElement(d,{as:"span",className:s(Y)},R.indeterminate):t.createElement(l,Object.assign({},Z));return t.createElement(c,Object.assign({as:"label",className:s(i.Checkbox,a(i.Checkbox,"disabled",z),j),"data-disabled":z,"data-label-position":S,testId:P},D),t.createElement(u,null,t.createElement(m,Object.assign({checked:C,className:i.CheckboxInput,"data-id":M,defaultChecked:E,isDisabled:z,onBlur:e=>{o(v)&&v(e),q(!1)},onChange:e=>{o(O)&&O(e),A||J(e.target.checked)},onFocus:e=>{o(H)&&H(e),q(!0)},ref:x,type:"checkbox"},T))),B&&t.createElement(b,{as:"span",className:s(i.CheckboxLabel,{[i.VisuallyHidden]:F}),"data-disabled":z,testId:W},B),t.createElement(c,Object.assign({"aria-hidden":"true",as:"span",className:X,"data-checked":K,"data-disabled":z,"data-focus":L,"data-error":y,testId:Q},V),N?ee:_))}));I.displayName="Checkbox";export{I as Checkbox};
