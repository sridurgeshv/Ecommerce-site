import{__rest as e}from"tslib";import*as a from"react";import s from"classnames";import{classNameModifierByFlag as r,classNameModifier as i}from"@aws-amplify/ui";import{ComponentClassNames as t}from"../shared/constants.mjs";import{Flex as l}from"../Flex/Flex.mjs";import"../Field/FieldClearButton.mjs";import"../Field/FieldDescription.mjs";import{FieldErrorMessage as o}from"../Field/FieldErrorMessage.mjs";import"../Field/Field.mjs";import{Input as c}from"../Input/Input.mjs";import{Label as d}from"../Label/Label.mjs";import{useStableId as m}from"../utils/useStableId.mjs";import{useSwitch as n}from"./useSwitch.mjs";import{View as h}from"../View/View.mjs";import{VisuallyHidden as p}from"../VisuallyHidden/VisuallyHidden.mjs";import{useFieldset as b}from"../Fieldset/useFieldset.mjs";const u=a.forwardRef(((u,k)=>{var{className:f,defaultChecked:C,id:w,isChecked:F,isDisabled:S,isLabelHidden:j,label:g,labelPosition:E,name:N,onChange:T,size:y,thumbColor:D,trackCheckedColor:H,trackColor:L,value:v,hasError:x,errorMessage:I}=u,M=e(u,["className","defaultChecked","id","isChecked","isDisabled","isLabelHidden","label","labelPosition","name","onChange","size","thumbColor","trackCheckedColor","trackColor","value","hasError","errorMessage"]);const{isOn:V,changeHandler:z,isFocused:B,setIsFocused:O}=n({onChange:T,isChecked:F,defaultChecked:C,isDisabled:S}),{isFieldsetDisabled:P}=b(),W=P||S,R=m(w),q=j?p:h,A=s(t.SwitchTrack,r(t.SwitchTrack,"checked",V),r(t.SwitchTrack,"disabled",W),r(t.SwitchTrack,"focused",B),r(t.SwitchTrack,"error",x)),G=s(t.SwitchThumb,r(t.SwitchThumb,"checked",V),r(t.SwitchThumb,"disabled",W));return a.createElement(l,Object.assign({className:s(t.SwitchField,i(t.SwitchField,y),f),"data-size":y,"data-label-position":E,ref:k},M),a.createElement(p,null,a.createElement(c,{role:"switch",type:"checkbox",id:R,onChange:z,disabled:S,name:N,checked:V,value:v,onFocus:()=>{O(!0)},onBlur:()=>{O(!1)}})),a.createElement(d,{htmlFor:R,className:s(t.SwitchWrapper,i(t.SwitchWrapper,E)),"data-label-position":E},a.createElement(q,{as:"span",className:t.SwitchLabel},g),a.createElement(h,{as:"span",className:A,"data-checked":V,"data-disabled":W,"data-focused":B,backgroundColor:V?H:L},a.createElement(h,{as:"span",className:G,"data-checked":V,"data-disabled":W,backgroundColor:D}))),a.createElement(o,{hasError:x,errorMessage:I}))}));u.displayName="SwitchField";export{u as SwitchField};
