import{__rest as e}from"tslib";import o from"classnames";import*as a from"react";import{FieldClearButton as n}from"../Field/FieldClearButton.mjs";import"../Field/FieldDescription.mjs";import"../Field/FieldErrorMessage.mjs";import"../Field/Field.mjs";import{FieldGroupIcon as t}from"../FieldGroupIcon/FieldGroupIcon.mjs";import"../FieldGroupIcon/FieldGroupIconButton.mjs";import{ComponentClassNames as r}from"../shared/constants.mjs";import"../View/View.mjs";import{IconSearch as i}from"../Icon/icons/IconSearch.mjs";import"../Icon/context/IconsContext.mjs";import{SearchFieldButton as l}from"./SearchFieldButton.mjs";import{TextField as m}from"../TextField/TextField.mjs";import{useSearchField as s}from"./useSearchField.mjs";import{strHasLength as c}from"../shared/utils.mjs";const d=a.forwardRef(((d,u)=>{var{autoComplete:p="off",className:f,isDisabled:h,clearButtonLabel:C,labelHidden:F=!0,name:b="q",hasSearchButton:j=!0,hasSearchIcon:S=!1,onChange:I,onClear:B,onSubmit:v,searchButtonRef:E,size:g,defaultValue:x,value:D}=d,V=e(d,["autoComplete","className","isDisabled","clearButtonLabel","labelHidden","name","hasSearchButton","hasSearchIcon","onChange","onClear","onSubmit","searchButtonRef","size","defaultValue","value"]);const{composedValue:w,onClearHandler:z,onKeyDown:R,onClick:k,handleOnChange:G,composedRefs:H}=s({defaultValue:x,value:D,onChange:I,onClear:B,onSubmit:v,externalRef:u}),N=j?a.createElement(l,{isDisabled:h,onClick:k,ref:E,size:g}):void 0,y=S?a.createElement(t,null,a.createElement(i,null)):void 0;return a.createElement(m,Object.assign({autoComplete:p,className:o(r.SearchField,f),labelHidden:F,innerStartComponent:y,innerEndComponent:a.createElement(n,{ariaLabel:C,excludeFromTabOrder:!0,isVisible:!h&&c(w),onClick:z,size:g,variation:"link"}),isDisabled:h,name:b,onChange:G,onKeyDown:R,outerEndComponent:N,ref:H,size:g,value:w},V))}));d.displayName="SearchField";export{d as SearchField};
