import{__awaiter as e}from"tslib";import{Hub as s,DataStore as t}from"aws-amplify";import{UI_CHANNEL as i,ACTION_DATASTORE_UPDATE_STARTED as o,EVENT_ACTION_DATASTORE_UPDATE as r,DATASTORE_QUERY_BY_ID_ERROR as d,ACTION_DATASTORE_UPDATE_FINISHED as m}from"./constants.mjs";import{getErrorMessage as a}from"../../helpers/utils.mjs";import{AMPLIFY_SYMBOL as n}from"../../helpers/constants.mjs";import{useTypeCastFields as c}from"./shared/useTypeCastFields.mjs";const f=({fields:f,id:l,model:p,schema:h})=>{const v=c({fields:f,modelName:p.name,schema:h});return()=>e(void 0,void 0,void 0,(function*(){try{s.dispatch(i,{event:o,data:{fields:v,id:l}},r,n);const e=yield t.query(p,l);if(!e)throw new Error(`${d}: ${l}`);const a=yield t.save(p.copyOf(e,(e=>{Object.assign(e,v)})));s.dispatch(i,{event:m,data:{fields:v,id:l,item:a}},r,n)}catch(e){s.dispatch(i,{event:m,data:{fields:v,id:l,errorMessage:a(e)}},r,n)}}))};export{f as useDataStoreUpdateAction};
