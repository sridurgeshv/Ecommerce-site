import{__awaiter as e}from"tslib";import*as s from"react";import{Hub as a}from"@aws-amplify/core";import{Auth as i}from"aws-amplify";const r=()=>{const[r,t]=s.useState({error:void 0,isLoading:!0,user:void 0}),o=s.useCallback((()=>e(void 0,void 0,void 0,(function*(){t((e=>Object.assign(Object.assign({},e),{isLoading:!0})));try{const e=yield i.currentAuthenticatedUser();t({user:e,isLoading:!1})}catch(e){t({error:e,isLoading:!1})}}))),[]),n=s.useCallback((({payload:e})=>{switch(e.event){case"signIn":case"signUp":case"autoSignIn":t({user:e.data,isLoading:!1});break;case"signOut":t({user:void 0,isLoading:!1});break;case"tokenRefresh_failure":case"signIn_failure":t({error:e.data,isLoading:!1});break;case"autoSignIn_failure":t({error:new Error(e.message),isLoading:!1});break;case"tokenRefresh":o()}}),[o]);return s.useEffect((()=>{const e=a.listen("auth",n,"useAuth");return o(),e}),[n,o]),Object.assign(Object.assign({},r),{fetch:o})};export{r as useAuth};
